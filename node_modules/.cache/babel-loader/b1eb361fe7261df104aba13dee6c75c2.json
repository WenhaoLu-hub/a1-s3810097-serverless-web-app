{"ast":null,"code":"import _regeneratorRuntime from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/src/components/GameAdmin.js\";\nimport React, { Component, Fragment } from 'react';\nimport FormErrors from \"./FormErrors\";\nimport Validate from \"./utility/FormValidation\"; // import Product from './Product';\n\nimport axios from \"axios\";\n\nvar config = require('../config.json');\n\nvar GameAdmin = /*#__PURE__*/function (_Component) {\n  _inherits(GameAdmin, _Component);\n\n  function GameAdmin(props) {\n    var _this;\n\n    _classCallCheck(this, GameAdmin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GameAdmin).call(this, props));\n\n    _this.onInputChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n\n      document.getElementById(event.target.id).classList.remove(\"is-danger\");\n    };\n\n    _this.state = {\n      name: '',\n      genres: '',\n      description: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  } // state = {\n  //   newgame: { \n  //     \"name\": \"web-test-name\",\n  //     \"genres\": \"web-test-genres\",\n  //     \"description\": \"webtest-description\"\n  //   },\n  //   games: []\n  // }\n\n\n  _createClass(GameAdmin, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var inputValue = event.target.value;\n      var stateField = event.target.name;\n      this.setState(_defineProperty({}, stateField, inputValue));\n      console.log(this.state);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var _this$state, name, genres, description;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _this$state = this.state, name = _this$state.name, genres = _this$state.genres, description = _this$state.description;\n                _context.next = 4;\n                return axios.post(\"\".concat(config.api.invokeUrl), {\n                  key1: \"\".concat(name),\n                  key2: \"\".concat(genres),\n                  key3: \"\".concat(description)\n                });\n\n              case 4:\n                alert(\"successfylly \" + JSON.stringify(name));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"render\",\n    // handleAddProduct = async (event) => {\n    //   event.preventDefault();\n    //   // add call to AWS API Gateway add product endpoint here\n    //   try {\n    //     const params = {\n    //         \"name\" : \"web-test-name\",\n    //         \"genres\" : \"web-test-genres\",\n    //         \"description\" : \"webtest-description\"   \n    //     };\n    //     alert(JSON.stringify(params));\n    //     await axios.post(`https://jmulu03w55.execute-api.us-east-1.amazonaws.com/dev`, params);\n    //     this.setState({ games: [...this.state.games, this.state.newgame] });\n    //     this.setState({ newgame: { \"name\": \"\", \"genres\": \"\" ,\"description\":\"\"}});\n    //   }catch (err) {\n    //     console.log(`An error has occurred: ${err}`);\n    //   }\n    // }\n    // handleUpdateProduct = async (name, genres, description) => {\n    //   // add call to AWS API Gateway update product endpoint here\n    //   try {\n    //     const params = {\n    //       \"name\": name,\n    //       \"genres\": genres,\n    //       \"description\": description\n    //     };\n    //     await axios.patch(`${config.api.invokeUrl}/game/${name}`, params);\n    //     const gameToUpdate = [...this.state.names].find(game => game.name === name);\n    //     const updatedGames = [...this.state.games].filter(game => game.name !== name);\n    //     gameToUpdate.productname = name;\n    //     updatedGames.push(gameToUpdate);\n    //     this.setState({products: updatedGames});\n    //   }catch (err) {\n    //     console.log(`Error updating product: ${err}`);\n    //   }\n    // }\n    // fetchProducts = async () => {\n    //   // add call to AWS API Gateway to fetch products here\n    //   // then set them in state\n    //   try {\n    //     const res = await axios.get(`${config.api.invokeUrl}/game`);\n    //     const games = res.data;\n    //     this.setState({ games: games });\n    //   } catch (err) {\n    //     console.log(`An error has occurred: ${err}`);\n    //   }\n    // }\n    // onAddGameNameChange = event => this.setState({ newgame: { ...this.state.newgame, \"name\": event.target.value } });\n    // onAddGameGenresChange = event => this.setState({ newgame: { ...this.state.newgame, \"genres\": event.target.value } });\n    // onAddGameDescChange = event => this.setState({ newgame: { ...this.state.newgame, \"description\": event.target.value } });\n    // componentDidMount = () => {\n    //   this.fetchProducts();\n    // }\n    value: function render() {\n      return (// <Fragment>\n        //   <section className=\"section\">\n        //     <div className=\"container\">\n        //       <h1>Product Admin</h1>\n        //       <p className=\"subtitle is-5\">Add new game using the form below:</p>\n        //       <br />\n        //       <div className=\"columns\">\n        //         <div className=\"column is-one-third\">\n        //           <form onSubmit={this.handleSubmit}>\n        //             <div className=\"field has-addons\">\n        //               <div className=\"control\">\n        //                 <input \n        //                   className=\"input is-medium\"\n        //                   type=\"text\" \n        //                   placeholder=\"Enter name\"\n        //                   onChange={this.onAddGameNameChange}\n        //                   value={this.state.name}\n        //                 />\n        //               </div>\n        //               <div className=\"control\">\n        //                 <input \n        //                   className=\"input is-medium\"\n        //                   type=\"text\" \n        //                   placeholder=\"Enter genres\"\n        //                   onChange={this.onAddGameGenresChange}\n        //                   value={this.state.genres}\n        //                 />\n        //               </div>\n        //               <div className=\"control\">\n        //                 <input \n        //                   className=\"input is-medium\"\n        //                   type=\"text\" \n        //                   placeholder=\"Enter description\"\n        //                   onChange={this.onAddGameDescChange}\n        //                   value={this.state.description}\n        //                 />\n        //               </div>\n        //               <div className=\"control\">\n        //                 <button type=\"submit\" className=\"button is-primary is-medium\">\n        //                   Add product\n        //                 </button>\n        //               </div>\n        //             </div>\n        //           </form>\n        //         </div>\n        //       </div>\n        //     </div>\n        //   </section>\n        // </Fragment>\n        React.createElement(\"section\", {\n          className: \"section auth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"New Game\"), React.createElement(FormErrors, {\n          formerrors: this.state.errors,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }), React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          id: \"name\" // aria-describedby=\"userNameHelp\"\n          ,\n          placeholder: \"Enter name\",\n          value: this.state.name,\n          onChange: this.onInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          id: \"genres\" // aria-describedby=\"emailHelp\"\n          ,\n          placeholder: \"Enter genres\",\n          value: this.state.genres,\n          onChange: this.onInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          id: \"description\",\n          placeholder: \"description\",\n          value: this.state.description,\n          onChange: this.onInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"button is-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Add a new Game\")))))) // <div>\n        //   <form onSubmit={this.handleSubmit}>\n        //     <div>\n        //     <label>Name:</label>\n        //     <input\n        //       type=\"text\"\n        //       name=\"name\"\n        //       onChange={this.handleChange}\n        //       value={this.state.name}\n        //     />\n        //     </div>\n        //     <div>\n        //     <label>genres:</label>\n        //     <input\n        //       type=\"text\"\n        //       name=\"genres\"\n        //       onChange={this.handleChange}\n        //       value={this.state.genres}\n        //     />\n        //     </div>\n        //     <div>\n        //     <label>description:</label>\n        //     <input\n        //       type=\"text\"\n        //       name=\"description\"\n        //       onChange={this.handleChange}\n        //       value={this.state.description}\n        //     />\n        //     </div>\n        //   <div><button type=\"submit\">Send</button></div>\n        //    </form>\n        //  </div>\n\n      );\n    }\n  }]);\n\n  return GameAdmin;\n}(Component);\n\nexport { GameAdmin as default };","map":{"version":3,"sources":["/Users/asher/Desktop/RMIT/BA2_TERM2/COSC2626_Cloud Computing/A1/a1-serverless-web-app/src/components/GameAdmin.js"],"names":["React","Component","Fragment","FormErrors","Validate","axios","config","require","GameAdmin","props","onInputChange","event","setState","target","id","value","document","getElementById","classList","remove","state","name","genres","description","handleSubmit","bind","handleChange","inputValue","stateField","console","log","preventDefault","post","api","invokeUrl","key1","key2","key3","alert","JSON","stringify","errors"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport FormErrors from \"./FormErrors\";\nimport Validate from \"./utility/FormValidation\";\n// import Product from './Product';\nimport axios from \"axios\";\nconst config = require('../config.json');\n\nexport default class GameAdmin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genres: '',\n      description: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // state = {\n  //   newgame: { \n  //     \"name\": \"web-test-name\",\n  //     \"genres\": \"web-test-genres\",\n  //     \"description\": \"webtest-description\"\n  //   },\n  //   games: []\n  // }\n  handleChange(event) {\n    const inputValue = event.target.value;\n    const stateField = event.target.name;\n    this.setState({\n      [stateField]: inputValue,\n    });\n    console.log(this.state);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { name, genres, description } = this.state;\n    await axios.post(\n      `${config.api.invokeUrl}`,\n      { key1: `${name}`, key2:`${genres}`,key3:`${description}` }\n    );\n    alert(\"successfylly \" + JSON.stringify(name));\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n  // handleAddProduct = async (event) => {\n  //   event.preventDefault();\n  //   // add call to AWS API Gateway add product endpoint here\n  //   try {\n  //     const params = {\n\n  //         \"name\" : \"web-test-name\",\n  //         \"genres\" : \"web-test-genres\",\n  //         \"description\" : \"webtest-description\"   \n\n  //     };\n  //     alert(JSON.stringify(params));\n  //     await axios.post(`https://jmulu03w55.execute-api.us-east-1.amazonaws.com/dev`, params);\n  //     this.setState({ games: [...this.state.games, this.state.newgame] });\n  //     this.setState({ newgame: { \"name\": \"\", \"genres\": \"\" ,\"description\":\"\"}});\n  //   }catch (err) {\n  //     console.log(`An error has occurred: ${err}`);\n  //   }\n  // }\n\n  // handleUpdateProduct = async (name, genres, description) => {\n  //   // add call to AWS API Gateway update product endpoint here\n  //   try {\n  //     const params = {\n  //       \"name\": name,\n  //       \"genres\": genres,\n  //       \"description\": description\n  //     };\n  //     await axios.patch(`${config.api.invokeUrl}/game/${name}`, params);\n  //     const gameToUpdate = [...this.state.names].find(game => game.name === name);\n  //     const updatedGames = [...this.state.games].filter(game => game.name !== name);\n  //     gameToUpdate.productname = name;\n  //     updatedGames.push(gameToUpdate);\n  //     this.setState({products: updatedGames});\n  //   }catch (err) {\n  //     console.log(`Error updating product: ${err}`);\n  //   }\n  // }\n\n\n  // fetchProducts = async () => {\n  //   // add call to AWS API Gateway to fetch products here\n  //   // then set them in state\n  //   try {\n  //     const res = await axios.get(`${config.api.invokeUrl}/game`);\n  //     const games = res.data;\n  //     this.setState({ games: games });\n  //   } catch (err) {\n  //     console.log(`An error has occurred: ${err}`);\n  //   }\n  // }\n\n  // onAddGameNameChange = event => this.setState({ newgame: { ...this.state.newgame, \"name\": event.target.value } });\n  // onAddGameGenresChange = event => this.setState({ newgame: { ...this.state.newgame, \"genres\": event.target.value } });\n  // onAddGameDescChange = event => this.setState({ newgame: { ...this.state.newgame, \"description\": event.target.value } });\n\n  // componentDidMount = () => {\n  //   this.fetchProducts();\n  // }\n\n  render() {\n    return (\n      // <Fragment>\n      //   <section className=\"section\">\n      //     <div className=\"container\">\n      //       <h1>Product Admin</h1>\n      //       <p className=\"subtitle is-5\">Add new game using the form below:</p>\n      //       <br />\n      //       <div className=\"columns\">\n      //         <div className=\"column is-one-third\">\n      //           <form onSubmit={this.handleSubmit}>\n      //             <div className=\"field has-addons\">\n      //               <div className=\"control\">\n      //                 <input \n      //                   className=\"input is-medium\"\n      //                   type=\"text\" \n      //                   placeholder=\"Enter name\"\n      //                   onChange={this.onAddGameNameChange}\n      //                   value={this.state.name}\n      //                 />\n      //               </div>\n      //               <div className=\"control\">\n      //                 <input \n      //                   className=\"input is-medium\"\n      //                   type=\"text\" \n      //                   placeholder=\"Enter genres\"\n      //                   onChange={this.onAddGameGenresChange}\n      //                   value={this.state.genres}\n      //                 />\n      //               </div>\n      //               <div className=\"control\">\n      //                 <input \n      //                   className=\"input is-medium\"\n      //                   type=\"text\" \n      //                   placeholder=\"Enter description\"\n      //                   onChange={this.onAddGameDescChange}\n      //                   value={this.state.description}\n      //                 />\n      //               </div>\n      //               <div className=\"control\">\n      //                 <button type=\"submit\" className=\"button is-primary is-medium\">\n      //                   Add product\n      //                 </button>\n      //               </div>\n      //             </div>\n      //           </form>\n      //         </div>\n  \n      //       </div>\n      //     </div>\n      //   </section>\n      // </Fragment>\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>New Game</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"name\"\n                  // aria-describedby=\"userNameHelp\"\n                  placeholder=\"Enter name\"\n                  value={this.state.name}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              \n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"genres\"\n                  // aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter genres\"\n                  value={this.state.genres}\n                  onChange={this.onInputChange}\n                />\n                \n              \n            </div>\n            <div className=\"field\">\n              \n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"description\"\n                  placeholder=\"description\"\n                  value={this.state.description}\n                  onChange={this.onInputChange}\n                />\n                \n                \n              \n            </div>\n\n            \n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Add a new Game\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n\n      // <div>\n      //   <form onSubmit={this.handleSubmit}>\n      //     <div>\n      //     <label>Name:</label>\n      //     <input\n      //       type=\"text\"\n      //       name=\"name\"\n      //       onChange={this.handleChange}\n      //       value={this.state.name}\n      //     />\n      //     </div>\n      //     <div>\n      //     <label>genres:</label>\n      //     <input\n      //       type=\"text\"\n      //       name=\"genres\"\n      //       onChange={this.handleChange}\n      //       value={this.state.genres}\n      //     />\n      //     </div>\n      //     <div>\n      //     <label>description:</label>\n      //     <input\n      //       type=\"text\"\n      //       name=\"description\"\n      //       onChange={this.handleChange}\n      //       value={this.state.description}\n      //     />\n      //     </div>\n          \n      //   <div><button type=\"submit\">Send</button></div>\n          \n\n          \n\n          \n      //    </form>\n      //  </div>\n    );\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}